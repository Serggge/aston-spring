server:
  port: 8080
  shutdown: graceful

logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.web.HttpLogging: DEBUG
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    org.springframework.cloud.gateway: DEBUG

spring:
  application:
    name: gateway-service
  profiles:
    active: dev
  cloud:
    gateway:
      server:
        webflux:
#          default-filters:
#            - TokenRelay=gateway
          discovery:
            locator:
              enabled: true
              lower-case-service-id: true
              predicates:
                - name: Path
                  args:
                    pattern: "'/'+serviceId+'/**'"
              filters:
                - name: CircuitBreaker
                  args:
                    name: serviceId
                - name: RewritePath
                  args:
                    regexp: "'/' + serviceId + '/?(?<remaining>.*)'"
                    replacement: "'/${remaining}'"
          routes:
            - id: user-service
              uri: http://localhost:8070/users
              predicates:
                - Path=/users
              filters:
                - TokenRelay=gateway
            - id: notification-service
              uri: http://localhost:8070/mail
              predicates:
                - Path=/mail
              filters:
                - TokenRelay=
  security:
    oauth2:
      client:
        registration:
          gateway:
            provider: oauth
            client-id: gateway
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: openid, profile, usersrv, mailsrv
        provider:
          oauth:
            issuer-uri: http://127.0.0.1:9000

resilience4j.circuitbreaker:
  instances:
    UserService:
      registerHealthIndicator: true
      slidingWindowSize: 5
    NotificationService:
      registerHealthIndicator: true
      slidingWindowSize: 5

resilience4j.timelimiter:
  instances:
    UserService:
      timeoutDuration: 5s
      cancelRunningFuture: false
    NotificationService:
      timeoutDuration: 5s
      cancelRunningFuture: false

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URL}