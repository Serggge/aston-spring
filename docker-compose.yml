services:
#  postgres:
#    image: postgres:18.0-alpine
#    container_name: postgres
#    environment:
#      POSTGRES_DB: userdb
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: postgres
#    volumes:
#      - ./src/main/resources:/docker-entrypoint-initdb.d
#      - /var/lib/postgresql/data
#    ports:
#      - "6543:5432"
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U postgres"]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#      start_period: 10s
#    restart: unless-stopped


#  userService:
#    build: ./user-service/
#    image: user_service
#    container_name: user_service
#    ports:
#      - "8080:8080"
#    depends_on:
#      postgres:
#        condition: service_healthy
#      broker1:
#        condition: service_healthy
#    environment:
#      POSTGRES_HOST: postgres
#      POSTGRES_PORT: 5432
#      POSTGRES_DB: userdb
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: postgres
#      FIRST_BROKER_URL: broker1:9091
#      SECOND_BROKER_URL: broker2:9091
#      TOPIC_NOTIFICATION_NAME: email-notification
#      OUTBOX_SCHEDULED_TIME: 5000
#
#
#  notificationService1:
#    build: ./notification-service/
#    image: notification_service
#    container_name: mailsender_primary
#    ports:
#      - "8082:8082"
#    depends_on:
#      - userService
#    environment:
#      FIRST_BROKER_URL: broker1:9092
#      SECOND_BROKER_URL: broker1:9092
#      BROKER_GROUP_ID: mail-sender
#      BROKER_CLIENT_ID: first-app
#      BROKER_TOPIC_NAME: email-notification
#      SMTP_SERVER: smtp.mailbox.org
#      SMTP_PORT: 471
#      MAILBOX_USER: user
#      MAILBOX_PASSWORD: password
#
#
#  notificationService2:
#    image: notification_service
#    container_name: mailsender_second
#    ports:
#      - "8083:8082"
#    depends_on:
#      - notificationService1
#    environment:
#      FIRST_BROKER_URL: broker1:9091
#      SECOND_BROKER_URL: broker2:9091
#      BROKER_GROUP_ID: mail-sender
#      BROKER_CLIENT_ID: second-app
#      BROKER_TOPIC_NAME: email-notification
#      SMTP_SERVER: smtp.mailbox.org
#      SMTP_PORT: 471
#      MAILBOX_USER: user
#      MAILBOX_PASSWORD: password

  controller-1:
    image: apache/kafka-native:latest
    container_name: controller-1
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  controller-2:
    image: apache/kafka-native:latest
    container_name: controller-2
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  broker-1:
    image: apache/kafka-native:latest
    container_name: broker-1
    ports:
      - 29092:9092
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-1:19092,PLAINTEXT_HOST://localhost:29092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    depends_on:
      - controller-1
      - controller-2
    healthcheck:
      test: [ "CMD-SHELL", "nc -z localhost 9091 || exit 1" ]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 15s

  broker-2:
    image: apache/kafka-native:latest
    container_name: broker-2
    ports:
      - 39092:9092
    environment:
      KAFKA_NODE_ID: 4
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-2:19092,PLAINTEXT_HOST://localhost:39092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    depends_on:
      - controller-1
      - controller-2
    healthcheck:
      test: [ "CMD-SHELL", "nc -z localhost 9091 || exit 1" ]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 15s

#  kafka-ui:
#    container_name: kafka_ui
#    hostname: kafka_ui
#    image: provectuslabs/kafka-ui:latest
#    depends_on:
#      - broker1
#      - broker2
#    ports:
#      - "8070:8080"
#    environment:
#      DYNAMIC_CONFIG_ENABLED: true

#  schema-registry:
#    image: confluentinc/cp-schema-registry:8.0.1
#    hostname: schema-registry
#    container_name: schema-registry
#    depends_on:
#      - broker1
#      - broker2
#    ports:
#      - "8081:8081"
#    environment:
#      SCHEMA_REGISTRY_HOST_NAME: schema-registry
#      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker1:29092'
#      SCHEMA_REGISTRY_LISTENERS: http://localhost:8081

#networks:
#  aston:
#    driver: bridge